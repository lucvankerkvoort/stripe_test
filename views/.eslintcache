[{"C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\index.js":"1","C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\App.js":"2","C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\reportWebVitals.js":"3","C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\CheckoutForm.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":541,"mtime":1606886481244,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1708,"mtime":1606951890868,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ozq2ly",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\index.js",[],["20","21"],"C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\App.js",[],"C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\reportWebVitals.js",[],"C:\\Users\\lucva\\Documents\\VSCode\\stripe_test\\views\\src\\CheckoutForm.js",["22"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PaymentRequestButtonElement,\r\n  useStripe,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const [paymentRequest, setPaymentRequest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (stripe) {\r\n      const pr = stripe.paymentRequest({\r\n        country: \"US\",\r\n        currency: \"usd\",\r\n        total: {\r\n          label: \"Demo total\",\r\n          amount: 1099,\r\n        },\r\n        requestPayerName: true,\r\n        requestPayerEmail: true,\r\n      });\r\n\r\n      // Check the availability of the Payment Request API.\r\n      pr.canMakePayment().then((result) => {\r\n        if (result) {\r\n          setPaymentRequest(pr);\r\n        }\r\n      });\r\n    }\r\n  }, [stripe]);\r\n\r\n  const handleClick = async (event) => {\r\n    // Get Stripe.js instance\r\n\r\n    // Call your backend to create the Checkout Session\r\n    const response = await fetch(\r\n      \"http://localhost:4242/create-checkout-session\",\r\n      {\r\n        method: \"POST\",\r\n      }\r\n    );\r\n\r\n    const session = await response.json();\r\n\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  };\r\n\r\n  if (paymentRequest) {\r\n    return <PaymentRequestButtonElement options={{ paymentRequest }} />;\r\n  }\r\n\r\n  // Use a traditional checkout form.\r\n  return \"Something went wrong\";\r\n};\r\n\r\nexport default CheckoutForm;\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":33,"column":9,"nodeType":"29","messageId":"30","endLine":33,"endColumn":20},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]